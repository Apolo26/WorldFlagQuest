@import url("https://fonts.googleapis.com/css2?family=Handjet:wght@800&display=swap");

/*Variables*/

:root {
  --pixel-bg: #f5f5f5;
  /* ↑ Color de fondo interno */

  --pixel-border: black;
  /* ↑ Color de borde interno */

  --pixel-border-2: yellow;
  /* ↑ Color de borde medio */

  --pixel-border-3: var(--pixel-border);
  /* ↑ Color de borde externo */

  --pixel: 0.3rem;
  /* ↑ Tamaño de píxel */
}

html,
body {
  height: 100%;
  margin: 0;
  padding: 0;
  font-family: "Handjet", Helvetica, sans-serif;
  display: grid;
  padding-inline: min(5vw, 1em);
}

section {
  margin: auto;
  padding-inline: min(5vw, 1em);
  font-family: "Handjet", Helvetica, sans-serif;
  text-align: center;
  z-index: 1;
}

h1 {
  font-size: clamp(0.625rem, calc(0.625rem + 4vw), 2rem);
}

/* Formulario */
.arcade-form {
  border: 5px solid transparent;
  background-color: #f5f5f5;
  padding: 20px;
  text-align: center;
  font-size: clamp(0.625rem, calc(0.625rem + 4vw), 2rem);
}

.arcade-form label {
  display: block;
  margin-bottom: 10px;
}

.arcade-form input[type="text"] {
  border: 5px solid #e5d62c;
  background-color: #f5f5f5;
  padding: 5px;
  color: #000000;
  font-size: clamp(0.625rem, calc(0.625rem + 4vw), 2rem);
  text-align: center;
  pointer-events: fill;
}

.arcade-form button {
  background-color: #e5d62c;
  border: 5px solid #212121;
  padding: 5px;
  color: #fefefe;
  font-family: "Handjet", Helvetica, sans-serif;
  font-size: clamp(0.625rem, calc(0.625rem + 4vw), 2rem);
  display: block;
  margin-top: 10px;
  width: 100%;
  box-sizing: border-box;
}

.arcade-form button:hover {
  background-color: #ff9900;
  color: #fefefe;
}

.background-wrapper {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  background-color: #007ced;
  background: linear-gradient(to bottom, #007ced 1%, #cce7ff 100%);
}

/*Botones*/
.home-button {
  position: fixed;
  top: 5%;
  right: 5%;
  z-index: 1;
}

.home-button img {
  width: 40px;
  height: auto;
}

.music-control {
  position: fixed;
  top: 10%;
  right: 5%;
  z-index: 2;
}

.music-control img {
  width: 40px;
  height: auto;
}


/*Background nubes*/

#cloud-intro {
  position: relative;
  height: 100%;
  background: url("../assets/1.png");
  background: url("../assets/2.png") 100px 250px;
  animation: wind 20s linear infinite;
}

@keyframes wind {
  0% {
    background-position: 0 200px, 0 300px, 100px 250px;
  }
  100% {
    background-position: 1000px 200px, 1200px 300px, 1100px 250px;
  }
}

/*Card con estilo pixel*/

.pixel-border {
  background-color: #f5f5f5;
  box-shadow:
		
	/* Inner Background Color */ 0 calc(var(--pixel) * -3) 0
      calc(var(--pixel) * -1) var(--pixel-bg),
    0 calc(var(--pixel) * 3) 0 calc(var(--pixel) * -1) var(--pixel-bg),
    0 calc(var(--pixel) * -6) 0 calc(var(--pixel) * -2) var(--pixel-bg),
    0 calc(var(--pixel) * 6) 0 calc(var(--pixel) * -2) var(--pixel-bg),
    0 calc(var(--pixel) * -9) 0 calc(var(--pixel) * -4) var(--pixel-bg),
    0 calc(var(--pixel) * 9) 0 calc(var(--pixel) * -4) var(--pixel-bg),
    0 calc(var(--pixel) * -12) 0 calc(var(--pixel) * -6) var(--pixel-bg),
    0 calc(var(--pixel) * 12) 0 calc(var(--pixel) * -6) var(--pixel-bg),
    /* Pixel Border Layer 1 */ calc(var(--pixel) * -1) 0 0 0 var(--pixel-border),
    var(--pixel) 0 0 0 var(--pixel-border),
    0 calc(var(--pixel) * -2) 0 0 var(--pixel-border),
    0 calc(var(--pixel) * 2) 0 0 var(--pixel-border),
    0 calc(var(--pixel) * -5) 0 calc(var(--pixel) * -1) var(--pixel-border),
    0 calc(var(--pixel) * 5) 0 calc(var(--pixel) * -1) var(--pixel-border),
    0 calc(var(--pixel) * -7) 0 calc(var(--pixel) * -2) var(--pixel-border),
    0 calc(var(--pixel) * 7) 0 calc(var(--pixel) * -2) var(--pixel-border),
    0 calc(var(--pixel) * -10) 0 calc(var(--pixel) * -4) var(--pixel-border),
    0 calc(var(--pixel) * 10) 0 calc(var(--pixel) * -4) var(--pixel-border),
    0 calc(var(--pixel) * -13) 0 calc(var(--pixel) * -6) var(--pixel-border),
    0 calc(var(--pixel) * 13) 0 calc(var(--pixel) * -6) var(--pixel-border),
    /* Pixel Border Layer 2 */ calc(var(--pixel) * -2) 0 0 0
      var(--pixel-border-2),
    calc(var(--pixel) * 2) 0 0 0 var(--pixel-border-2),
    0 calc(var(--pixel) * -1) 0 var(--pixel) var(--pixel-border-2),
    0 var(--pixel) 0 var(--pixel) var(--pixel-border-2),
    0 calc(var(--pixel) * -4) 0 0 var(--pixel-border-2),
    0 calc(var(--pixel) * 4) 0 0 var(--pixel-border-2),
    0 calc(var(--pixel) * -6) 0 calc(var(--pixel) * -1) var(--pixel-border-2),
    0 calc(var(--pixel) * 6) 0 calc(var(--pixel) * -1) var(--pixel-border-2),
    0 calc(var(--pixel) * -8) 0 calc(var(--pixel) * -2) var(--pixel-border-2),
    0 calc(var(--pixel) * 8) 0 calc(var(--pixel) * -2) var(--pixel-border-2),
    0 calc(var(--pixel) * -11) 0 calc(var(--pixel) * -4) var(--pixel-border-2),
    0 calc(var(--pixel) * 11) 0 calc(var(--pixel) * -4) var(--pixel-border-2),
    0 calc(var(--pixel) * -14) 0 calc(var(--pixel) * -6) var(--pixel-border-2),
    0 calc(var(--pixel) * 14) 0 calc(var(--pixel) * -6) var(--pixel-border-2),
    /* Border Layer 3: --pixel-border-3 */ calc(var(--pixel) * -3) 0 0 0
      var(--pixel-border-3),
    calc(var(--pixel) * 3) 0 0 0 var(--pixel-border-3),
    0 0 0 calc(var(--pixel) * 2) var(--pixel-border-3),
    0 calc(var(--pixel) * -3) 0 var(--pixel) var(--pixel-border-3),
    0 calc(var(--pixel) * 3) 0 var(--pixel) var(--pixel-border-3),
    0 calc(var(--pixel) * -5) 0 0 var(--pixel-border-3),
    0 calc(var(--pixel) * 5) 0 0 var(--pixel-border-3),
    0 calc(var(--pixel) * -7) 0 calc(var(--pixel) * -1) var(--pixel-border-3),
    0 calc(var(--pixel) * 7) 0 calc(var(--pixel) * -1) var(--pixel-border-3),
    0 calc(var(--pixel) * -9) 0 calc(var(--pixel) * -2) var(--pixel-border-3),
    0 calc(var(--pixel) * 9) 0 calc(var(--pixel) * -2) var(--pixel-border-3),
    0 calc(var(--pixel) * -12) 0 calc(var(--pixel) * -4) var(--pixel-border-3),
    0 calc(var(--pixel) * 12) 0 calc(var(--pixel) * -4) var(--pixel-border-3),
    0 calc(var(--pixel) * -15) 0 calc(var(--pixel) * -6) var(--pixel-border-3),
    0 calc(var(--pixel) * 15) 0 calc(var(--pixel) * -6) var(--pixel-border-3);
}

/* Seccion Juego */

#game-section {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 2rem;
  width: 500px;
  height: 600px;
  margin: 0 auto;
}

#flag {
  max-width: 100%;
  height: auto;
  margin: 0 auto;
}

#question {
  font-size: clamp(1rem, 3vw, 2rem);
}

#options {
  margin-top: 1rem;
  gap: 0.1rem;
}

#options button {
  width: 100%;
  grid-template-columns: repeat(2, 2fr);
}

#next-btn {
  margin-top: 1rem;
  font-size: 20px;
}

#result {
  text-align: center;
  font-size: clamp(1rem, 3vw, 2rem);
  margin-top: 1rem;
  line-height: 1.5;
}

#replay-btn {
  flex: 1;
  margin-top: 1rem;
  margin-right: 10px;
  font-size: clamp(1rem, 3vw, 2rem);
}

#end-btn {
  flex: 1 ;
  margin-left: 10px;
  margin-top: 1rem;
  font-size: clamp(1rem, 3vw, 2rem);
}

#button-container {
  display: flex;
  justify-content: space-between;
  margin-top: 20px;
}

/* Modal top 20*/
.modal {
  display: none;
  position: fixed;
  z-index: 1000;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  overflow: auto;
  font-size: clamp(1rem, 3vw, 2rem);
}

.modal-content {
  background-color: #fefefe;
  margin: 10% auto;
  padding: 20px;
  width: 70%;
  max-width: 600px;
  position: relative;
  text-align: center;
  border-radius: 10px;
  background-color: #f5f5f5;
  box-shadow:
		
	/* Inner Background Color */ 0 calc(var(--pixel) * -3) 0
      calc(var(--pixel) * -1) var(--pixel-bg),
    0 calc(var(--pixel) * 3) 0 calc(var(--pixel) * -1) var(--pixel-bg),
    0 calc(var(--pixel) * -6) 0 calc(var(--pixel) * -2) var(--pixel-bg),
    0 calc(var(--pixel) * 6) 0 calc(var(--pixel) * -2) var(--pixel-bg),
    0 calc(var(--pixel) * -9) 0 calc(var(--pixel) * -4) var(--pixel-bg),
    0 calc(var(--pixel) * 9) 0 calc(var(--pixel) * -4) var(--pixel-bg),
    0 calc(var(--pixel) * -12) 0 calc(var(--pixel) * -6) var(--pixel-bg),
    0 calc(var(--pixel) * 12) 0 calc(var(--pixel) * -6) var(--pixel-bg),
    /* Pixel Border Layer 1 */ calc(var(--pixel) * -1) 0 0 0 var(--pixel-border),
    var(--pixel) 0 0 0 var(--pixel-border),
    0 calc(var(--pixel) * -2) 0 0 var(--pixel-border),
    0 calc(var(--pixel) * 2) 0 0 var(--pixel-border),
    0 calc(var(--pixel) * -5) 0 calc(var(--pixel) * -1) var(--pixel-border),
    0 calc(var(--pixel) * 5) 0 calc(var(--pixel) * -1) var(--pixel-border),
    0 calc(var(--pixel) * -7) 0 calc(var(--pixel) * -2) var(--pixel-border),
    0 calc(var(--pixel) * 7) 0 calc(var(--pixel) * -2) var(--pixel-border),
    0 calc(var(--pixel) * -10) 0 calc(var(--pixel) * -4) var(--pixel-border),
    0 calc(var(--pixel) * 10) 0 calc(var(--pixel) * -4) var(--pixel-border),
    0 calc(var(--pixel) * -13) 0 calc(var(--pixel) * -6) var(--pixel-border),
    0 calc(var(--pixel) * 13) 0 calc(var(--pixel) * -6) var(--pixel-border),
    /* Pixel Border Layer 2 */ calc(var(--pixel) * -2) 0 0 0
      var(--pixel-border-2),
    calc(var(--pixel) * 2) 0 0 0 var(--pixel-border-2),
    0 calc(var(--pixel) * -1) 0 var(--pixel) var(--pixel-border-2),
    0 var(--pixel) 0 var(--pixel) var(--pixel-border-2),
    0 calc(var(--pixel) * -4) 0 0 var(--pixel-border-2),
    0 calc(var(--pixel) * 4) 0 0 var(--pixel-border-2),
    0 calc(var(--pixel) * -6) 0 calc(var(--pixel) * -1) var(--pixel-border-2),
    0 calc(var(--pixel) * 6) 0 calc(var(--pixel) * -1) var(--pixel-border-2),
    0 calc(var(--pixel) * -8) 0 calc(var(--pixel) * -2) var(--pixel-border-2),
    0 calc(var(--pixel) * 8) 0 calc(var(--pixel) * -2) var(--pixel-border-2),
    0 calc(var(--pixel) * -11) 0 calc(var(--pixel) * -4) var(--pixel-border-2),
    0 calc(var(--pixel) * 11) 0 calc(var(--pixel) * -4) var(--pixel-border-2),
    0 calc(var(--pixel) * -14) 0 calc(var(--pixel) * -6) var(--pixel-border-2),
    0 calc(var(--pixel) * 14) 0 calc(var(--pixel) * -6) var(--pixel-border-2),
    /* Border Layer 3: --pixel-border-3 */ calc(var(--pixel) * -3) 0 0 0
      var(--pixel-border-3),
    calc(var(--pixel) * 3) 0 0 0 var(--pixel-border-3),
    0 0 0 calc(var(--pixel) * 2) var(--pixel-border-3),
    0 calc(var(--pixel) * -3) 0 var(--pixel) var(--pixel-border-3),
    0 calc(var(--pixel) * 3) 0 var(--pixel) var(--pixel-border-3),
    0 calc(var(--pixel) * -5) 0 0 var(--pixel-border-3),
    0 calc(var(--pixel) * 5) 0 0 var(--pixel-border-3),
    0 calc(var(--pixel) * -7) 0 calc(var(--pixel) * -1) var(--pixel-border-3),
    0 calc(var(--pixel) * 7) 0 calc(var(--pixel) * -1) var(--pixel-border-3),
    0 calc(var(--pixel) * -9) 0 calc(var(--pixel) * -2) var(--pixel-border-3),
    0 calc(var(--pixel) * 9) 0 calc(var(--pixel) * -2) var(--pixel-border-3),
    0 calc(var(--pixel) * -12) 0 calc(var(--pixel) * -4) var(--pixel-border-3),
    0 calc(var(--pixel) * 12) 0 calc(var(--pixel) * -4) var(--pixel-border-3),
    0 calc(var(--pixel) * -15) 0 calc(var(--pixel) * -6) var(--pixel-border-3),
    0 calc(var(--pixel) * 15) 0 calc(var(--pixel) * -6) var(--pixel-border-3);
}

.close {
  position: absolute;
  top: 5px;
  right: 10px;
  font-size: 20px;
  font-weight: bold;
  color: #007ced;
}

.loader-container {
  text-align: center;
  position: relative;
}

#loading-text,
#loader {
  display: none; 
}

#loading-text {
  font-size: 16px;
  margin-bottom: 8px;
}

#loader {
  max-width: 100px; 
  display: block;
  margin: 0 auto;
}

#leaderboard {
  text-align: center;
  margin-top: 20px;
}

#leaderboard ul {
  list-style: none;
  padding: 0;
}

#leaderboard li {
  margin-bottom: 10px;
}

#leaderboard h2 {
  font-size: 1.5rem;
  margin-bottom: 10px;
}

#show-leaderboard {
  position: fixed;
  top: 16%;
  right: 5%;
  z-index: 1;
}

#show-leaderboard img {
  width: 40px;
  height: auto;
}

@media screen and (max-width: 768px) {
  #game-section {
    max-width: 90%;
    width: auto;
    height: auto;
  }

  #question {
    font-size: clamp(0.8rem, 2.5vw, 1.5rem);
  }

  /* Ajustar el tamaño de fuente de botones */
  .nes-btn {
    font-size: clamp(0.625rem, calc(0.625rem + 3vw), 2rem);
  }
}
